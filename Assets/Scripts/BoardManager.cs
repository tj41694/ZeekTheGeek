using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class BoardManager : MonoBehaviour
{
    public GameObject[] objects;
    public GameObject Player;
    
    [HideInInspector]
    public float playerMoveTime;

    private GameObject boardHolder;
    private int[][] levelboard;
    private GameObject player;

    public void SetupScene(int level)
    {
        player = Instantiate(Player);
        playerMoveTime = player.GetComponent<PlayerController>().movingTime;
        Destroy(GameObject.Find("Board"));
        levelboard = SetLevle(level);
        PlacePlayer(level);
        LoadLevel(levelboard);
    }

    private int[][] SetLevle(int level)
    {
        int[][] lb = new int[12][];
        if (level == 1)
        {                        // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
            lb[11] = new int[17] { 18, 07, 06, 10, 09, 01, 08, 05, 15, 12, 17, 00, 11, 10, 02, 02, 02 };
            lb[10] = new int[17] { 09, 01, 08, 05, 15, 12, 18, 07, 06, 10, 09, 01, 08, 05, 02, 02, 02 };
            lb[09] = new int[17] { 15, 12, 17, 00, 11, 10, 09, 01, 08, 05, 15, 12, 18, 07, 02, 02, 02 };
            lb[08] = new int[17] { 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02 };
            lb[07] = new int[17] { 02, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 02 };
            lb[06] = new int[17] { 02, 03, 00, 00, 00, 01, 00, 01, 00, 00, 00, 00, 01, 00, 00, 03, 02 };
            lb[05] = new int[17] { 02, 03, 00, 04, 04, 04, 04, 04, 08, 04, 04, 04, 04, 04, 00, 03, 02 };
            lb[04] = new int[17] { 02, 03, 00, 08, 00, 00, 10, 04, 00, 00, 00, 05, 00, 00, 01, 03, 02 };
            lb[03] = new int[17] { 02, 03, 00, 04, 00, 04, 00, 04, 00, 04, 04, 04, 04, 04, 00, 03, 02 };
            lb[02] = new int[17] { 02, 03, 01, 00, 00, 04, 01, 00, 01, 01, 00, 01, 00, 00, 00, 03, 02 };
            lb[01] = new int[17] { 02, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 09, 03, 02 };
            lb[00] = new int[17] { 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02 };
        }
        else if (level == 2)
        {                        // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
            lb[11] = new int[17] { 18, 07, 06, 10, 09, 01, 08, 05, 15, 12, 17, 00, 11, 10, 02, 02, 02 };
            lb[10] = new int[17] { 09, 01, 08, 05, 15, 12, 18, 07, 06, 10, 09, 01, 08, 05, 02, 02, 02 };
            lb[09] = new int[17] { 15, 12, 17, 00, 11, 10, 09, 01, 08, 05, 15, 12, 18, 07, 02, 02, 02 };
            lb[08] = new int[17] { 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03 };
            lb[07] = new int[17] { 03, 00, 00, 01, 00, 01, 00, 00, 00, 00, 01, 00, 01, 00, 00, 00, 03 };
            lb[06] = new int[17] { 03, 00, 03, 03, 03, 03, 03, 03, 00, 03, 03, 03, 03, 03, 03, 00, 03 };
            lb[05] = new int[17] { 03, 00, 09, 00, 00, 00, 00, 03, 00, 03, 00, 00, 00, 08, 08, 00, 03 };
            lb[04] = new int[17] { 03, 00, 03, 03, 00, 03, 00, 03, 00, 03, 00, 03, 00, 03, 03, 00, 03 };
            lb[03] = new int[17] { 03, 00, 03, 01, 00, 03, 00, 03, 06, 03, 00, 03, 00, 03, 11, 00, 03 };
            lb[02] = new int[17] { 03, 00, 03, 03, 00, 00, 00, 06, 00, 06, 00, 00, 00, 03, 03, 00, 03 };
            lb[01] = new int[17] { 03, 10, 00, 00, 00, 03, 01, 03, 00, 03, 01, 03, 00, 00, 00, 00, 03 };
            lb[00] = new int[17] { 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03 };
        }
        else if (level == 3)
        {                        // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
            lb[11] = new int[17] { 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02 };
            lb[10] = new int[17] { 02, 01, 00, 01, 00, 01, 01, 01, 01, 02, 01, 01, 01, 02, 02, 02, 02 };
            lb[09] = new int[17] { 02, 00, 00, 00, 01, 01, 00, 12, 00, 02, 01, 12, 00, 02, 02, 02, 02 };
            lb[08] = new int[17] { 02, 01, 00, 01, 01, 00, 01, 00, 01, 02, 00, 01, 01, 02, 02, 02, 02 };
            lb[07] = new int[17] { 02, 02, 02, 02, 02, 15, 02, 02, 02, 02, 02, 01, 02, 02, 10, 00, 02 };
            lb[06] = new int[17] { 02, 11, 01, 11, 02, 00, 01, 00, 00, 01, 00, 00, 02, 01, 01, 00, 02 };
            lb[05] = new int[17] { 02, 00, 17, 00, 17, 01, 00, 01, 00, 00, 01, 01, 02, 00, 00, 01, 02 };
            lb[04] = new int[17] { 02, 01, 00, 11, 02, 00, 01, 07, 07, 07, 00, 00, 14, 01, 00, 00, 02 };
            lb[03] = new int[17] { 02, 02, 02, 02, 02, 01, 00, 07, 07, 07, 01, 00, 02, 00, 05, 01, 02 };
            lb[02] = new int[17] { 02, 11, 09, 00, 05, 00, 00, 01, 05, 00, 00, 01, 02, 00, 01, 00, 02 };
            lb[01] = new int[17] { 02, 01, 11, 01, 02, 00, 01, 00, 00, 01, 00, 01, 02, 11, 00, 11, 02 };
            lb[00] = new int[17] { 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02 };
        }
        else if (level == 4)
        {                        // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
            lb[11] = new int[17] { 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04 };
            lb[10] = new int[17] { 04, 11, 17, 00, 00, 01, 00, 00, 01, 00, 17, 05, 00, 04, 04, 04, 04 };
            lb[09] = new int[17] { 04, 11, 04, 01, 00, 05, 00, 09, 00, 19, 00, 00, 01, 04, 04, 04, 04 };
            lb[08] = new int[17] { 04, 04, 04, 17, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04 };
            lb[07] = new int[17] { 04, 01, 00, 01, 00, 00, 09, 00, 04, 01, 00, 00, 17, 00, 00, 17, 04 };
            lb[06] = new int[17] { 04, 00, 00, 00, 04, 00, 00, 06, 00, 00, 00, 00, 04, 04, 04, 00, 04 };
            lb[05] = new int[17] { 04, 04, 05, 04, 04, 01, 00, 01, 04, 01, 00, 01, 04, 00, 00, 19, 04 };
            lb[04] = new int[17] { 04, 00, 00, 01, 04, 04, 04, 04, 04, 04, 04, 04, 04, 00, 09, 00, 04 };
            lb[03] = new int[17] { 04, 01, 00, 00, 04, 00, 01, 00, 00, 00, 01, 00, 04, 00, 17, 09, 04 };
            lb[02] = new int[17] { 04, 00, 00, 01, 00, 00, 00, 01, 09, 00, 00, 00, 19, 17, 00, 00, 04 };
            lb[01] = new int[17] { 04, 00, 01, 00, 04, 01, 04, 00, 10, 00, 04, 01, 04, 00, 17, 01, 04 };
            lb[00] = new int[17] { 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04 };
        }
        else if (level == 5)
        {                        // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
            lb[11] = new int[17] { 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03 };
            lb[10] = new int[17] { 03, 11, 11, 01, 00, 00, 00, 00, 00, 00, 05, 00, 00, 03, 03, 03, 03 };
            lb[09] = new int[17] { 03, 09, 00, 00, 00, 01, 05, 00, 08, 00, 01, 00, 08, 03, 03, 03, 03 };
            lb[08] = new int[17] { 03, 03, 00, 04, 04, 04, 04, 04, 04, 04, 04, 00, 03, 03, 03, 03, 03 };
            lb[07] = new int[17] { 03, 01, 00, 00, 00, 01, 00, 18, 04, 10, 00, 00, 01, 00, 00, 01, 03 };
            lb[06] = new int[17] { 03, 00, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 00, 03 };
            lb[05] = new int[17] { 03, 00, 04, 00, 11, 07, 18, 04, 18, 04, 12, 08, 00, 00, 04, 00, 03 };
            lb[04] = new int[17] { 03, 00, 04, 12, 07, 09, 00, 16, 00, 16, 00, 05, 05, 00, 04, 01, 03 };
            lb[03] = new int[17] { 03, 00, 04, 00, 00, 00, 00, 04, 01, 04, 12, 00, 00, 00, 04, 00, 03 };
            lb[02] = new int[17] { 03, 01, 04, 04, 04, 04, 04, 04, 15, 04, 04, 04, 04, 04, 04, 00, 03 };
            lb[01] = new int[17] { 03, 00, 01, 00, 01, 01, 01, 00, 00, 00, 00, 01, 00, 00, 01, 00, 03 };
            lb[00] = new int[17] { 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03 };
        }
        else if (level == 6)
        {                        // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
            lb[11] = new int[17] { 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02 };
            lb[10] = new int[17] { 02, 01, 01, 00, 02, 18, 00, 00, 00, 01, 00, 00, 00, 02, 02, 02, 02 };
            lb[09] = new int[17] { 02, 00, 00, 00, 05, 00, 01, 00, 09, 02, 00, 17, 00, 02, 02, 02, 02 };
            lb[08] = new int[17] { 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 17, 02, 02, 02, 02, 02, 02 };
            lb[07] = new int[17] { 02, 00, 01, 00, 00, 01, 00, 00, 00, 16, 06, 00, 19, 00, 00, 18, 02 };
            lb[06] = new int[17] { 02, 12, 02, 08, 02, 02, 02, 02, 01, 02, 00, 00, 01, 00, 18, 12, 02 };
            lb[05] = new int[17] { 02, 00, 05, 00, 01, 00, 00, 01, 00, 02, 02, 02, 02, 02, 02, 02, 02 };
            lb[04] = new int[17] { 02, 02, 02, 02, 02, 08, 02, 02, 13, 02, 01, 05, 00, 19, 00, 10, 02 };
            lb[03] = new int[17] { 02, 01, 00, 02, 12, 05, 00, 01, 00, 02, 00, 00, 09, 00, 07, 10, 02 };
            lb[02] = new int[17] { 02, 00, 17, 02, 02, 02, 02, 02, 00, 02, 00, 01, 00, 00, 07, 07, 02 };
            lb[01] = new int[17] { 02, 01, 00, 01, 00, 00, 01, 16, 00, 17, 01, 07, 00, 01, 00, 11, 02 };
            lb[00] = new int[17] { 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02 };
        }
        else if (level == 7)
        {                        // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
            lb[11] = new int[17] { 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03 };
            lb[10] = new int[17] { 03, 06, 00, 06, 00, 06, 00, 06, 03, 00, 11, 00, 03, 03, 03, 03, 03 };
            lb[09] = new int[17] { 03, 00, 06, 00, 06, 00, 06, 00, 03, 19, 00, 19, 03, 03, 03, 03, 03 };
            lb[08] = new int[17] { 03, 06, 00, 06, 00, 06, 00, 06, 03, 00, 19, 00, 03, 03, 03, 03, 03 };
            lb[07] = new int[17] { 03, 00, 06, 00, 06, 00, 06, 00, 03, 19, 00, 19, 03, 05, 00, 05, 03 };
            lb[06] = new int[17] { 03, 06, 00, 06, 00, 06, 00, 06, 03, 00, 19, 00, 03, 00, 05, 00, 03 };
            lb[05] = new int[17] { 03, 00, 06, 00, 06, 00, 06, 00, 03, 19, 00, 19, 03, 05, 00, 05, 03 };
            lb[04] = new int[17] { 03, 06, 00, 06, 00, 06, 00, 06, 00, 00, 00, 00, 00, 00, 05, 00, 03 };
            lb[03] = new int[17] { 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 00, 03 };
            lb[02] = new int[17] { 03, 00, 09, 00, 00, 00, 16, 00, 05, 00, 05, 00, 00, 00, 00, 00, 03 };
            lb[01] = new int[17] { 03, 10, 00, 05, 00, 09, 03, 00, 00, 01, 00, 00, 12, 08, 03, 09, 03 };
            lb[00] = new int[17] { 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03 };
        }
        else if (level == 8)
        {                        // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
            lb[11] = new int[17] { 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04 };
            lb[10] = new int[17] { 04, 00, 01, 01, 04, 00, 01, 01, 06, 06, 01, 00, 00, 04, 04, 04, 04 };
            lb[09] = new int[17] { 04, 06, 00, 00, 17, 00, 06, 06, 06, 00, 06, 00, 01, 04, 04, 04, 04 };
            lb[08] = new int[17] { 04, 00, 00, 04, 04, 00, 01, 01, 00, 00, 04, 15, 04, 04, 04, 04, 04 };
            lb[07] = new int[17] { 04, 06, 01, 12, 04, 01, 00, 01, 01, 00, 04, 00, 17, 00, 04, 11, 04 };
            lb[06] = new int[17] { 04, 04, 04, 04, 04, 06, 06, 06, 06, 06, 04, 04, 04, 15, 04, 01, 04 };
            lb[05] = new int[17] { 04, 09, 00, 05, 00, 06, 00, 08, 06, 00, 01, 08, 04, 06, 01, 00, 04 };
            lb[04] = new int[17] { 04, 11, 01, 06, 01, 06, 00, 00, 00, 00, 01, 01, 04, 00, 06, 01, 04 };
            lb[03] = new int[17] { 04, 00, 09, 06, 00, 01, 00, 06, 06, 01, 01, 01, 04, 00, 00, 01, 04 };
            lb[02] = new int[17] { 04, 05, 00, 06, 00, 01, 08, 06, 06, 01, 01, 01, 04, 06, 00, 01, 04 };
            lb[01] = new int[17] { 04, 00, 12, 01, 00, 09, 06, 06, 06, 06, 01, 05, 04, 01, 01, 10, 04 };
            lb[00] = new int[17] { 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04, 04 };
        }
        else if (level == 9)
        {                        // 0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
            lb[11] = new int[17] { 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03 };
            lb[10] = new int[17] { 03, 1, 1, 1, 0, 0, 0, 0, 1, 0, 6, 0, 1, 3, 3, 3, 03 };
            lb[09] = new int[17] { 03, 1, 5, 1, 1, 3, 3, 3, 3, 9, 6, 1, 0, 3, 3, 3, 03 };
            lb[08] = new int[17] { 03, 1, 1, 1, 1, 1, 1, 1, 3, 0, 0, 0, 1, 3, 3, 3, 03 };
            lb[07] = new int[17] { 03, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 8, 0, 03 };
            lb[06] = new int[17] { 03, 0, 6, 0, 6, 0, 6, 0, 6, 16, 0, 0, 0, 0, 0, 5, 03 };
            lb[05] = new int[17] { 03, 6, 0, 6, 0, 0, 6, 0, 6, 3, 3, 3, 3, 3, 0, 12, 03 };
            lb[04] = new int[17] { 03, 1, 6, 0, 0, 6, 6, 6, 0, 3, 1, 1, 12, 3, 3, 3, 03 };
            lb[03] = new int[17] { 03, 0, 0, 6, 6, 0, 1, 1, 3, 3, 12, 3, 3, 3, 3, 10, 03 };
            lb[02] = new int[17] { 03, 0, 6, 6, 1, 6, 0, 1, 3, 8, 0, 0, 0, 0, 3, 13, 03 };
            lb[01] = new int[17] { 03, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 5, 0, 14, 1, 03 };
            lb[00] = new int[17] { 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03 };
        }
        else if (level == 10)
        {
            lb[11] = new int[17] { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
            lb[10] = new int[17] { 2, 1, 0, 1, 0, 5, 0, 0, 0, 19, 0, 0, 11, 2, 2, 2, 2 };
            lb[09] = new int[17] { 2, 1, 1, 0, 5, 5, 0, 1, 9, 0, 1, 0, 11, 2, 2, 2, 2 };
            lb[08] = new int[17] { 2, 2, 17, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
            lb[07] = new int[17] { 2, 0, 1, 0, 0, 1, 0, 0, 0, 19, 19, 19, 19, 10, 0, 1, 2 };
            lb[06] = new int[17] { 2, 1, 0, 1, 0, 0, 1, 2, 2, 2, 2, 9, 2, 2, 2, 0, 2 };
            lb[05] = new int[17] { 2, 0, 0, 19, 0, 1, 0, 2, 0, 0, 0, 0, 1, 0, 0, 1, 2 };
            lb[04] = new int[17] { 2, 1, 0, 0, 0, 17, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2 };
            lb[03] = new int[17] { 2, 0, 1, 0, 1, 2, 2, 2, 1, 0, 1, 0, 1, 0, 1, 0, 2 };
            lb[02] = new int[17] { 2, 1, 0, 1, 0, 2, 8, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2 };
            lb[01] = new int[17] { 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2 };
            lb[00] = new int[17] { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
        }
        else if (level == 11)
        {
            lb[11] = new int[17] { 8, 5, 8, 8, 1, 8, 8, 8, 8, 1, 8, 1, 8, 1, 4, 4, 4 };
            lb[10] = new int[17] { 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 8, 4, 4, 4 };
            lb[09] = new int[17] { 8, 0, 8, 1, 8, 8, 1, 1, 8, 0, 8, 1, 0, 8, 4, 4, 4 };
            lb[08] = new int[17] { 1, 0, 1, 0, 0, 8, 1, 0, 8, 1, 0, 0, 1, 1, 8, 8, 1 };
            lb[07] = new int[17] { 8, 1, 8, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 8 };
            lb[06] = new int[17] { 8, 0, 1, 0, 1, 8, 1, 8, 8, 9, 1, 8, 8, 1, 8, 0, 8 };
            lb[05] = new int[17] { 8, 1, 8, 1, 0, 1, 0, 0, 1, 0, 1, 0, 8, 0, 1, 1, 8 };
            lb[04] = new int[17] { 1, 0, 1, 0, 8, 8, 1, 0, 1, 1, 0, 1, 1, 8, 1, 0, 1 };
            lb[03] = new int[17] { 8, 1, 8, 1, 1, 8, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 8 };
            lb[02] = new int[17] { 1, 1, 8, 0, 0, 1, 1, 8, 8, 8, 0, 8, 0, 18, 18, 0, 1 };
            lb[01] = new int[17] { 8, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 10, 0, 1, 8 };
            lb[00] = new int[17] { 1, 1, 8, 1, 8, 1, 8, 8, 1, 8, 1, 8, 9, 1, 8, 1, 8 };
        }
        else if (level == 12)
        {
            lb[11] = new int[17] { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };
            lb[10] = new int[17] { 3, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 3, 3, 3, 3 };
            lb[09] = new int[17] { 3, 0, 18, 18, 8, 18, 18, 1, 1, 18, 1, 8, 0, 3, 3, 3, 3 };
            lb[08] = new int[17] { 3, 1, 0, 1, 0, 1, 10, 5, 0, 18, 1, 1, 1, 3, 3, 3, 3 };
            lb[07] = new int[17] { 3, 3, 3, 3, 3, 3, 1, 3, 1, 8, 0, 18, 0, 9, 0, 1, 3 };
            lb[06] = new int[17] { 3, 9, 0, 8, 0, 3, 0, 3, 0, 18, 1, 19, 0, 0, 0, 0, 3 };
            lb[05] = new int[17] { 3, 0, 0, 0, 0, 3, 0, 3, 0, 18, 1, 18, 0, 5, 0, 0, 3 };
            lb[04] = new int[17] { 3, 0, 0, 5, 12, 3, 13, 3, 0, 18, 1, 18, 18, 18, 18, 1, 3 };
            lb[03] = new int[17] { 3, 5, 3, 3, 3, 3, 13, 3, 0, 18, 0, 5, 0, 18, 0, 0, 3 };
            lb[02] = new int[17] { 3, 12, 1, 0, 0, 1, 0, 0, 1, 18, 8, 0, 1, 18, 1, 9, 3 };
            lb[01] = new int[17] { 3, 8, 5, 0, 0, 0, 8, 5, 0, 1, 1, 0, 1, 5, 11, 0, 3 };
            lb[00] = new int[17] { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };
        }
        else if (level == 13)
        {
            lb[11] = new int[17] { 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4 };
            lb[10] = new int[17] { 4, 1, 0, 0, 4, 10, 0, 16, 16, 1, 0, 0, 1, 4, 4, 4, 4 };
            lb[09] = new int[17] { 4, 0, 0, 1, 4, 4, 4, 4, 4, 0, 0, 4, 0, 4, 4, 4, 4 };
            lb[08] = new int[17] { 4, 1, 6, 0, 4, 11, 12, 0, 0, 1, 0, 4, 0, 4, 4, 4, 4 };
            lb[07] = new int[17] { 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 13, 4, 0, 4, 12, 1, 4 };
            lb[06] = new int[17] { 4, 8, 0, 0, 5, 0, 4, 9, 4, 9, 0, 9, 0, 0, 0, 0, 4 };
            lb[05] = new int[17] { 4, 0, 0, 6, 0, 0, 0, 0, 4, 0, 0, 4, 4, 0, 1, 0, 4 };
            lb[04] = new int[17] { 4, 5, 0, 6, 0, 0, 4, 0, 4, 5, 0, 1, 4, 1, 0, 11, 4 };
            lb[03] = new int[17] { 4, 0, 0, 6, 6, 6, 4, 1, 4, 0, 0, 5, 4, 4, 4, 4, 4 };
            lb[02] = new int[17] { 4, 1, 0, 0, 0, 1, 4, 0, 4, 1, 0, 0, 0, 0, 0, 1, 4 };
            lb[01] = new int[17] { 4, 0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0, 4, 1, 0, 12, 4 };
            lb[00] = new int[17] { 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4 };
        }
        else if (level == 14)
        {
            lb[11] = new int[17] { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };
            lb[10] = new int[17] { 3, 12, 0, 0, 0, 1, 5, 1, 1, 1, 5, 5, 8, 3, 3, 3, 3 };
            lb[09] = new int[17] { 3, 1, 9, 8, 6, 1, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 3 };
            lb[08] = new int[17] { 3, 15, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };
            lb[07] = new int[17] { 3, 0, 3, 1, 1, 1, 1, 3, 12, 1, 3, 9, 1, 1, 1, 10, 3 };
            lb[06] = new int[17] { 3, 0, 6, 0, 0, 0, 1, 3, 1, 1, 3, 0, 1, 3, 3, 3, 3 };
            lb[05] = new int[17] { 3, 3, 15, 3, 3, 0, 3, 3, 5, 1, 3, 1, 1, 1, 1, 1, 8 };
            lb[04] = new int[17] { 3, 12, 1, 1, 3, 1, 1, 1, 0, 0, 3, 1, 1, 1, 5, 5, 3 };
            lb[03] = new int[17] { 3, 12, 5, 1, 3, 1, 8, 0, 0, 1, 3, 3, 3, 1, 0, 0, 3 };
            lb[02] = new int[17] { 3, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 8, 8, 1, 1, 8, 3 };
            lb[01] = new int[17] { 3, 1, 1, 1, 1, 1, 1, 1, 1, 14, 14, 0, 0, 5, 0, 9, 3 };
            lb[00] = new int[17] { 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };
        }
        else if (level == 15)
        {
            lb[11] = new int[17] { 12, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 12, 2, 2, 2 };
            lb[10] = new int[17] { 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 2, 2, 2 };
            lb[09] = new int[17] { 6, 6, 6, 6, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2 };
            lb[08] = new int[17] { 6, 6, 6, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 2, 2 };
            lb[07] = new int[17] { 6, 6, 0, 5, 0, 5, 0, 0, 0, 6, 6, 0, 5, 0, 0, 0, 0 };
            lb[06] = new int[17] { 6, 6, 0, 0, 0, 0, 0, 1, 0, 6, 6, 0, 0, 0, 9, 0, 9 };
            lb[05] = new int[17] { 6, 6, 0, 0, 0, 0, 0, 0, 0, 6, 6, 0, 5, 0, 4, 15, 4 };
            lb[04] = new int[17] { 6, 6, 0, 6, 6, 6, 6, 0, 0, 0, 5, 0, 0, 0, 4, 15, 4 };
            lb[03] = new int[17] { 6, 6, 0, 0, 5, 0, 6, 5, 0, 6, 6, 0, 5, 0, 6, 11, 6 };
            lb[02] = new int[17] { 6, 6, 0, 6, 6, 0, 6, 0, 0, 6, 6, 0, 1, 0, 6, 11, 6 };
            lb[01] = new int[17] { 6, 9, 0, 0, 0, 0, 6, 0, 0, 6, 6, 0, 0, 0, 6, 10, 6 };
            lb[00] = new int[17] { 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 };
        }
        else if (level == 16)
        {
            lb[11] = new int[17] { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
            lb[10] = new int[17] { 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 2, 2, 2 };
            lb[09] = new int[17] { 2, 13, 14, 15, 16, 17, 18, 19, 17, 16, 15, 14, 13, 2, 2, 2, 2 };
            lb[08] = new int[17] { 2, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 2, 2, 2 };
            lb[07] = new int[17] { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
            lb[06] = new int[17] { 2, 9, 0, 0, 0, 2, 18, 18, 12, 18, 0, 0, 1, 0, 0, 0, 2 };
            lb[05] = new int[17] { 2, 0, 1, 5, 12, 2, 0, 18, 18, 18, 4, 15, 4, 4, 8, 0, 2 };
            lb[04] = new int[17] { 2, 2, 17, 2, 2, 2, 19, 0, 0, 0, 4, 11, 10, 4, 0, 0, 2 };
            lb[03] = new int[17] { 2, 0, 0, 5, 0, 14, 1, 0, 0, 0, 4, 11, 11, 4, 1, 5, 2 };
            lb[02] = new int[17] { 2, 0, 17, 0, 0, 2, 19, 0, 1, 9, 4, 4, 4, 4, 17, 1, 2 };
            lb[01] = new int[17] { 2, 0, 5, 0, 9, 2, 1, 0, 17, 0, 0, 0, 0, 0, 0, 17, 2 };
            lb[00] = new int[17] { 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
        }
        return lb;
    }

    private void PlacePlayer(int level)
    {
        if (level == 1) player.transform.position = new Vector3(2, 0, 6);
        else if (level == 2) player.transform.position = new Vector3(1, 0, 7);
        else if (level == 3) player.transform.position = new Vector3(2, 0, 9);
        else if (level == 4) player.transform.position = new Vector3(4, 0, 7);
        else if (level == 5) player.transform.position = new Vector3(12, 0, 3);
        else if (level == 6) player.transform.position = new Vector3(5, 0, 9);
        else if (level == 7) player.transform.position = new Vector3(2, 0, 10);
        else if (level == 8) player.transform.position = new Vector3(5, 0, 10);
        else if (level == 9) player.transform.position = new Vector3(5, 0, 10);
        else if (level == 10) player.transform.position = new Vector3(8, 0, 5);
        else if (level == 11) player.transform.position = new Vector3(1, 0, 10);
        else if (level == 12) player.transform.position = new Vector3(8, 0, 6);
        else if (level == 13) player.transform.position = new Vector3(2, 0, 10);
        else if (level == 14) player.transform.position = new Vector3(4, 0, 10);
        else if (level == 15) player.transform.position = new Vector3(4, 0, 9);
        else if (level == 16) player.transform.position = new Vector3(1, 0, 1);
}

    private void LoadLevel(int[][] level)
    {
        boardHolder = new GameObject("Board");
        for (int i = 0; i < 12; i++)
        {
            for (int j = 0; j < 17; j++)
            {
                int index = level[i][j];
                if (index != 0)
                {
                    GameObject toInstantiate = objects[index - 1];
                    GameObject instance = Instantiate(toInstantiate,
                        new Vector3(j, 0f, i),
                        Quaternion.identity);
                    instance.transform.SetParent(boardHolder.transform);
                }
            }
        }
    }
}
